// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence.Primary.DataAccess;

namespace Persistence.Primary.Migrations
{
    [DbContext(typeof(AdvertoDbContext))]
    [Migration("20210801052124_AddIndexForAdTypeColumnOfAdEntity")]
    partial class AddIndexForAdTypeColumnOfAdEntity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AdCategory", b =>
                {
                    b.Property<Guid>("AdsAdId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoriesCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AdsAdId", "CategoriesCategoryId");

                    b.HasIndex("CategoriesCategoryId");

                    b.ToTable("AdCategory");
                });

            modelBuilder.Entity("AdTag", b =>
                {
                    b.Property<Guid>("AdsAdId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TagsTagId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AdsAdId", "TagsTagId");

                    b.HasIndex("TagsTagId");

                    b.ToTable("AdTag");
                });

            modelBuilder.Entity("Domain.Primary.Entities.Ad", b =>
                {
                    b.Property<Guid>("AdId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdType")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(3600)
                        .HasColumnType("nvarchar(3600)");

                    b.Property<double>("Cost")
                        .HasColumnType("float");

                    b.HasKey("AdId");

                    b.HasIndex("AdType");

                    b.ToTable("Ads");
                });

            modelBuilder.Entity("Domain.Primary.Entities.AdQueue", b =>
                {
                    b.Property<Guid>("AdQueueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CurrentAdIndex")
                        .HasColumnType("int");

                    b.HasKey("AdQueueId");

                    b.ToTable("AdQueues");
                });

            modelBuilder.Entity("Domain.Primary.Entities.AdView", b =>
                {
                    b.Property<Guid>("AdViewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AdId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ViewedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("AdViewId");

                    b.HasIndex("AdId");

                    b.ToTable("AdViews");
                });

            modelBuilder.Entity("Domain.Primary.Entities.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("CategoryId");

                    b.HasIndex("Title")
                        .IsUnique();

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Domain.Primary.Entities.DisabledAd", b =>
                {
                    b.Property<Guid>("AdId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DisabledAt")
                        .HasColumnType("datetime2");

                    b.HasKey("AdId");

                    b.ToTable("DisabledAds");
                });

            modelBuilder.Entity("Domain.Primary.Entities.Tag", b =>
                {
                    b.Property<Guid>("TagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("TagId");

                    b.HasIndex("Title")
                        .IsUnique();

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("AdCategory", b =>
                {
                    b.HasOne("Domain.Primary.Entities.Ad", null)
                        .WithMany()
                        .HasForeignKey("AdsAdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Primary.Entities.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoriesCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AdTag", b =>
                {
                    b.HasOne("Domain.Primary.Entities.Ad", null)
                        .WithMany()
                        .HasForeignKey("AdsAdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Primary.Entities.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsTagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Primary.Entities.AdView", b =>
                {
                    b.HasOne("Domain.Primary.Entities.Ad", "Ad")
                        .WithMany("AdViews")
                        .HasForeignKey("AdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ad");
                });

            modelBuilder.Entity("Domain.Primary.Entities.DisabledAd", b =>
                {
                    b.HasOne("Domain.Primary.Entities.Ad", "Ad")
                        .WithOne("DisabledAd")
                        .HasForeignKey("Domain.Primary.Entities.DisabledAd", "AdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ad");
                });

            modelBuilder.Entity("Domain.Primary.Entities.Ad", b =>
                {
                    b.Navigation("AdViews");

                    b.Navigation("DisabledAd");
                });
#pragma warning restore 612, 618
        }
    }
}
